name: Deploy Spring Boot Backend to GCP VM

on:
    push:
        branches:
            - main

env:
    PROJECT_ID: next-step
    # ⭐ GCR_HOSTNAME 대신 Artifact Registry 호스트 이름과 저장소 이름을 사용합니다.
    # Artifact Registry 호스트 이름은 '리전-docker.pkg.dev' 형식입니다. (예: asia-northeast3-docker.pkg.dev)
    # Artifact Registry 저장소 이름은 GCP에서 생성한 Docker 저장소 이름입니다. (예: docker-repo)
    AR_HOSTNAME: asia-northeast3-docker.pkg.dev # ⭐ Artifact Registry 저장소 리전-docker.pkg.dev
    AR_REPOSITORY: next-step-docker # ⭐ Artifact Registry에서 생성한 Docker 저장소 이름 (예: docker-repo)

    IMAGE_NAME: spring-boot-backend
    VM_INSTANCE_NAME: next-step-backend
    VM_ZONE: asia-northeast3-c # ⭐ VM 인스턴스 목록에서 확인된 정확한 Zone (next-step-backend의 Zone)
    VM_USER: nextstep9898

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"
                  cache: "gradle"

            - name: Build with Gradle
              run: |
                  chmod +x gradlew
                  ./gradlew clean bootJar

            - name: Authenticate to GCP
              uses: google-github-actions/auth@v2
              with:
                  credentials_json: ${{ secrets.GCP_SA_KEY }}

            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v2
              with:
                  project_id: ${{ env.PROJECT_ID }}

            # ⭐ Docker 인증 명령을 Artifact Registry용으로 변경합니다.
            # 이 명령은 Docker가 Artifact Registry에 인증할 수 있도록 자격 증명을 구성합니다.
            - name: Configure Docker to use Artifact Registry as a credential helper
              run: gcloud auth configure-docker ${AR_HOSTNAME}

            # ⭐ Docker 이미지 빌드 및 푸시 명령 변경: Artifact Registry 경로 사용
            # 이미지 태그 형식이 'HOSTNAME/PROJECT_ID/REPOSITORY/IMAGE_NAME:TAG'로 변경됩니다.
            - name: Build & Push Docker image to Artifact Registry
              run: |
                  docker build -t ${AR_HOSTNAME}/${PROJECT_ID}/${AR_REPOSITORY}/${IMAGE_NAME}:latest .
                  docker push ${AR_HOSTNAME}/${PROJECT_ID}/${AR_REPOSITORY}/${IMAGE_NAME}:latest

            # ⭐ VM 배포 명령 변경: Artifact Registry 이미지 경로 사용
            - name: Deploy to GCP VM using gcloud SSH
              run: |
                  gcloud compute ssh ${VM_USER}@${VM_INSTANCE_NAME} \
                    --project=${PROJECT_ID} \
                    --zone=${VM_ZONE} \
                    --command="\
                      sudo docker stop ${IMAGE_NAME} || true && \
                      sudo docker rm ${IMAGE_NAME} || true && \
                      sudo docker pull ${AR_HOSTNAME}/${PROJECT_ID}/${AR_REPOSITORY}/${IMAGE_NAME}:latest && \
                      sudo docker run -d --name ${IMAGE_NAME} -p 8080:8080 ${AR_HOSTNAME}/${PROJECT_ID}/${AR_REPOSITORY}/${IMAGE_NAME}:latest \
                    "
